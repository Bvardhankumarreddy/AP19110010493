Write a c program to impelement queue using two stacks
Ans)
//Implementation of queue using two stacks
#include<stdio.h>
#include<stdlib.h>
void push1();
void push2();
int pop1();
int pop2();
void enqueue();
void dequeue();
void display();
void create();
int stack1[1000], stack2[1000];
int top1=-1, top2=-2;
int count=0;
//Beigning of enqueue
void enqueue(){
    int data,i;
    printf("Enter the data: \t");
    scanf("%d", &data);
    push1(data);//To push the data from the stack to the std::queue
    count++;
}
//End of enqueue
//Beigningn of dequeue
void dequeue(){
    int j;
    for (j=0;j<=count;j++){
        push2(pop1());
    }
    pop2();
    count--;
    for (j=0;j<=count;j++){
        push1(pop2());
    }
}
//End of dequeue
//Beigning of display program
void display()
{
    int j;
    if(top1==-1){
        printf("\nEmpty queue");
    }
    else {
        printf("\nQueue Elements:");
        for (j=0;j<=top1;j++){
            printf("%d",stack1[j]);
        }
        printf("\n");
    }
}
//End of display program
//Beigning of program to create the stavk
void create() {
    top1=top2=-1;
}
void push1(int element){
    stack1[top1++]=element;
}
int pop1() {
    return(stack1[top1--]);
}
void push2(int element){
    stack2[top2++]=element;
}
int pop2(){
    return(stack2[top2--]);
}
//End of creating program
//Beigning of main program
void main(){
    int choice;
    printf("\nQueu using stacks implementation");
    printf("\n1.Enqueue");
    printf("\n2.Dequeue");
    printf("\n3.Display");
    printf("\n4.Exit");
    printf("\n");
    create ();
    while(1){
        printf("\nEnter your choice: ");
        scanf("%d",&choice);
        switch(choice) {
            case 1:
            enqueue();
            break;
            case 2:
            dequeue();
            break;
            case 3:
            display();
            break;
            case 4:
            exit(0);
            default:
            printf("\nInvalid choice");
        }
    }
}
//End of main program
//End of total program
